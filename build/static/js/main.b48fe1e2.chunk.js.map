{"version":3,"sources":["components/menu/ListItem.js","assets/logosport.png","store/utility.js","store/reducers/auth.js","components/menu/Menu.js","components/utils/Spinner.js","components/layout/Layout.js","config/axios-control.js","config/firebase.js","store/actions/auth.js","store/actions/actionTypes.js","store/actions/data.js","components/utils/Logout.js","components/auth/SignIn.js","config/sports.js","components/auth/Register.js","utils/helpers.js","components/map/MapStyles.js","components/map/MapContainer.js","components/map/Map.js","store/reducers/data.js","Main.js","components/events/helpers.js","components/users/Users.js","components/events/EventAddModal.js","components/events/Events.js","components/dashboard/Dashboard.js","components/observed/Observed.js","components/users/User.js","components/events/Event.js","App.js","index.js"],"names":["ListItem","props","exact","to","path","className","title","updateObject","oldObject","updatedProperties","initialState","userId","user","error","loading","authStart","state","authSuccess","action","isAdmin","authFail","authLogout","userIdSelector","createSelector","auth","isAuthSelector","isAdminSelector","Menu","isAuth","useSelector","src","logo","alt","Fragment","Spinner","load","Layout","children","axiosInstance","axios","create","baseURL","firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","eventsRef","ref","signIn","email","password","dispatch","type","authData","returnSecureToken","post","then","response","data","localId","get","responseUsers","expirationTime","key","id","is_boss","token","idToken","expiresIn","setTimeout","signInWithEmailAndPassword","catch","err","console","fetchData","dataEvents","dataUsers","dataOpinions","Promise","all","responses","eventsResponse","usersResponse","opinionsResponse","push","payload","e","Logout","useDispatch","SignIn","useState","setEmail","setPassword","onSubmit","event","preventDefault","onAuth","toast","autoComplete","onChange","target","value","name","placeholder","required","sports","sportIcons","register","userName","favouriteSport","createUserWithEmailAndPassword","favourite_sport","success","sendNewUserToDatabase","uid","Register","setUserName","setFavouriteSport","registered","setRegistered","selectedIndex","getAttribute","map","sport","loadPosition","cookies","hereLat","hereLng","navigator","geolocation","getCurrentPosition","pos","coordinates","coords","set","latitude","maxAge","longitude","maximumAge","timeout","enableHighAccuracy","MapStyles","MapContainer","loadMap","google","calculateAndDisplay","directionsService","directionsDisplay","destLng","destLat","lngNew","parseFloat","latNew","route","origin","lat","latHere","lng","lngHere","destination","travelMode","status","setDirections","window","alert","maps","DirectionsService","distanceMatrix","DistanceMatrixService","DirectionsRenderer","mapRef","refs","node","ReactDOM","findDOMNode","centerObject","hereChecked","mapConfig","Object","assign","center","zoom","mapTypeId","styles","Map","setMap","location","infowindow","InfoWindow","content","marker","Marker","position","addListener","open","this","markerHere","destSearch","destMatrix","calculateMatrix","source","getDistanceMatrix","origins","destinations","smallest","indexArray","dataClosest","rows","elements","item","index","undefined","distance","dataFromNavigation","length","style","width","height","Component","GoogleApiWrapper","events","opinions","users","eventsSelector","usersSelector","Main","withCookies","loadPositionResponse","xLng","setXLng","xLat","setXLat","setSport","setDestSearch","dataToDisplay","setDataToDisplay","useEffect","filter","marginLeft","x","disabled","Boolean","onClick","instance","mapSportToIcon","findIndex","Users","EventAddModalBase","changeHandler","property","setState","handleGeocode","date","desc","limit","address","time","userid","geocoder","Geocoder","resolve","reject","geocode","results","geometry","geocodeAddress","activePeople","comments","toggle","modal","bind","Button","Modal","isOpen","size","centered","ModalHeader","ModalBody","marginBottom","method","htmlFor","min","Date","max","React","EventAddModal","connect","Events","i","child","remove","Dashboard","Observed","photo_link","dangerouslySetInnerHTML","__html","description","User","match","params","find","u","eventsForUser","Event","eventFromStoreSelector","comment","setComment","hasJoined","getUser","leaveEvent","joinEvent","aria-hidden","cols","commentsToSpread","sendComment","App","loaded","component","EventPage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","CookiesProvider","render","document","getElementById"],"mappings":"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","file":"static/js/main.b48fe1e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ListItem = props => (\r\n    <li>\r\n        <NavLink exact to={props.path} className=\"link-menu\">\r\n            {props.title}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport { ListItem };\r\n","export default __webpack_public_path__ + \"static/media/logosport.aac88a1e.png\";","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\nimport { createSelector } from 'reselect';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    user: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst authStart = state => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: action.userId,\r\n        user: action.user,\r\n        isAdmin: action.isAdmin,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = state => {\r\n    return updateObject(state, { user: null, userId: null });\r\n};\r\n\r\nconst userIdSelector = createSelector(state => state.auth.userId, userId => userId);\r\nconst isAuthSelector = createSelector(state => state.auth.userId, userId => userId !== null);\r\nconst isAdminSelector = createSelector(state => state.auth.isAdmin, isAdmin => isAdmin);\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport {\r\n    authReducer,\r\n    isAdminSelector,\r\n    isAuthSelector,\r\n    userIdSelector,\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ListItem } from './ListItem';\r\nimport logo from '../../assets/logosport.png';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAuthSelector } from '../../store/reducers/auth';\r\n\r\nconst Menu = () => {\r\n    const isAuth = useSelector(isAuthSelector);\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"header-content\">\r\n                            <Link to={'/'} className=\"\">\r\n                                <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                            </Link>\r\n                            <ul className=\"header__nav\">\r\n                                    <ListItem path={'/'} title=\"Mapa\" />\r\n                                    <ListItem path={'/events'} title=\"Wydarzenia\" />\r\n                                    <ListItem path={'/users'} title=\"Sportowcy\" />\r\n                                {\r\n                                    isAuth ?\r\n                                        <React.Fragment>\r\n                                            <ListItem path={'/observed'} title=\"Obserwowane\" />\r\n                                            <li>\r\n                                                <Link to={'/logout'} className=\"btn-navigate\">\r\n                                                    Wyloguj\r\n                                                </Link>\r\n                                            </li>\r\n                                        </React.Fragment>\r\n                                    :\r\n                                        <React.Fragment>\r\n                                            <li>\r\n                                                <Link to={'/signin'} className=\"btn-navigate\">\r\n                                                    Zaloguj\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Link to={'/register'} className=\"btn-navigate register\">\r\n                                                    Zarejestruj się\r\n                                                </Link>\r\n                                            </li>\r\n                                        </React.Fragment>\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport { Menu };\r\n","import React from 'react';\r\n\r\nconst Spinner = (props) => (\r\n    <div className={`loaderWrapper ${props.load}`}>\r\n        <div className=\"loader\"></div>\r\n    </div>\r\n);\r\n\r\nexport { Spinner };","import React from 'react';\r\nimport { Menu } from '../menu/Menu';\r\nimport { Spinner } from '../utils/Spinner';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <Spinner load={false} />\r\n            <Menu />\r\n            <main>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">{props.children}</div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Layout };","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://sports-friend-finder-3953b.firebaseio.com/' // -< dev\r\n    // baseURL: 'https://sportowegowno.eu/' // -> prod\r\n});\r\n\r\nexport { axiosInstance };\r\n","import * as firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCTQuiB-VOS_XrqZhQ-8KBSzYLkWZ0e9mY\",\r\n    authDomain: \"sports-friend-finder-3953b.firebaseapp.com\",\r\n    databaseURL: \"https://sports-friend-finder-3953b.firebaseio.com\",\r\n    projectId: \"sports-friend-finder-3953b\",\r\n    storageBucket: \"sports-friend-finder-3953b.appspot.com\",\r\n    messagingSenderId: \"35975487296\",\r\n    appId: \"1:35975487296:web:74ea21d4c115bb520a24a5\"\r\n};\r\n\r\nexport const key = 'AIzaSyCTQuiB-VOS_XrqZhQ-8KBSzYLkWZ0e9mY';\r\n\r\nexport const firebaseApp = firebase.initializeApp(config);\r\nexport const db = firebase.database();\r\nconst eventsRef = db.ref('events');\r\nconst usersRef = db.ref('users');\r\nconst opinionsRef = db.ref('opinions');\r\n\r\nexport { eventsRef, usersRef, opinionsRef };\r\n\r\n","import { axiosInstance as axios } from '../../config/axios-control';\r\nimport { firebaseApp, key } from '../../config/firebase';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const logout = () => {\r\n    return { type: actionTypes.AUTH_LOGOUT };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const authStart = () => {\r\n    return { type: actionTypes.AUTH_START };\r\n};\r\n\r\nconst authSuccess = (token, userId, isAdmin) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId,\r\n        isAdmin\r\n    };\r\n};\r\n\r\nconst authFail = error => {\r\n    return { type: actionTypes.AUTH_FAIL, error };\r\n};\r\n\r\nconst signIn = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + key, authData)\r\n            .then(response => {\r\n                const userId = response.data.localId;\r\n                axios.get('/users.json').then(responseUsers => {\r\n                    let isAdmin = false;\r\n                    for (let key in responseUsers.data) {\r\n                        const user = responseUsers.data[key];\r\n                        if (user?.id === userId) {\r\n                            isAdmin = user.is_boss;\r\n                        }\r\n                    }\r\n\r\n                    dispatch(authSuccess(response.data.idToken, userId, isAdmin));\r\n                    dispatch(checkAuthTimeout(response.data.expiresIn));\r\n                    firebaseApp.auth().signInWithEmailAndPassword(email, password);\r\n                });\r\n\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    };\r\n};\r\n\r\nexport { signIn }\r\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\nexport const FETCH_EVENTS = 'FETCH_EVENTS';\r\nexport const FETCH_OPINIONS = 'FETCH_OPINIONS';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\n","import { axiosInstance as axios } from '../../config/axios-control';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const fetchData = () => {\r\n    return (dispatch) => {\r\n        const dataEvents = [];\r\n        const dataUsers = [];\r\n        const dataOpinions = [];\r\n\r\n        Promise.all([\r\n            axios.get('/events.json'),\r\n            axios.get('/users.json'),\r\n            axios.get('/opinions.json')\r\n        ]).then(responses => {\r\n            const eventsResponse = responses[0];\r\n            const usersResponse = responses[1];\r\n            const opinionsResponse = responses[2];\r\n            for (let key in eventsResponse.data) {\r\n                eventsResponse.data[key] && dataEvents.push({\r\n                        key,\r\n                        ...eventsResponse.data[key]\r\n                    });\r\n            }\r\n\r\n            for (let key in usersResponse.data) {\r\n                usersResponse.data[key] && dataUsers.push({\r\n                    ...usersResponse.data[key]\r\n                });\r\n            }\r\n\r\n            for (let key in opinionsResponse.data) {\r\n                opinionsResponse.data[key] && dataOpinions.push({\r\n                    ...opinionsResponse.data[key]\r\n                });\r\n            }\r\n\r\n            dispatch({\r\n                type: actionTypes.FETCH_DATA,\r\n                payload: {\r\n                    dataEvents,\r\n                    dataUsers,\r\n                    dataOpinions,\r\n                }\r\n            });\r\n        }).catch(e => console.error(e));\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logout } from '../../store/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Logout = () => {\r\n    const dispatch = useDispatch();\r\n    dispatch(logout());\r\n\r\n    return (\r\n        <Redirect to={'/'} />\r\n    );\r\n};\r\n\r\nexport { Logout };\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { errorMessage } from './helpers';\r\nimport { signIn } from '../../store/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAuthSelector } from '../../store/reducers/auth';\r\n\r\nconst SignIn = () => {\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(isAuthSelector);\r\n\r\n    const onAuth = (email, password) => dispatch(signIn(email, password));\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if (email !== '' && password !== '') {\r\n            onAuth(email, password);\r\n        } else {\r\n            toast.error('Wystapil błąd');\r\n        }\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n\r\n    return (\r\n        <section className=\"section-form\">\r\n            <div className=\"SignIn form-main\">\r\n                <form onSubmit={submitHandler} autoComplete=\"off\">\r\n                    <h4 className=\"section__h4\">Zaloguj się</h4>\r\n                    <div className=\"form-group user\">\r\n                        <input\r\n                            autoComplete=\"new-user\"\r\n                            onChange={event => setEmail(event.target.value)}\r\n                            className=\"form-control email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group password\">\r\n                        <input\r\n                            autoComplete=\"new-password\"\r\n                            onChange={event => setPassword(event.target.value)}\r\n                            className=\"form-control password\"\r\n                            name=\"pass\"\r\n                            id=\"pass\"\r\n                            type=\"password\"\r\n                            placeholder=\"Hasło\"\r\n                            value={password}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-main\" type=\"submit\">\r\n                        <span>Zaloguj się</span>\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport { SignIn };\r\n","const sports = [\r\n    'Bieganie',\r\n    'Piłka nożna',\r\n    'Piłka siatkowa',\r\n    'Koszykówka',\r\n    'Pływanie',\r\n    'Tenis',\r\n    'Siłownia',\r\n    'Rower',\r\n    'Rugby',\r\n];\r\n\r\nconst sportIcons = [\r\n    'https://image.flaticon.com/icons/svg/55/55240.svg',\r\n    'http://simpleicon.com/wp-content/uploads/football.png',\r\n    'https://cdn4.iconfinder.com/data/icons/sports-38/58/volei-512.png',\r\n    'https://cdn0.iconfinder.com/data/icons/basketball-19/32/Basketball_Icon_set_Outline_ball_1-512.png',\r\n    'https://cdn3.iconfinder.com/data/icons/summer/512/swim-512.png',\r\n    'https://cdn1.iconfinder.com/data/icons/sport-line-12/64/Racket_racquette_sport_tennis_icon-512.png',\r\n    'https://cdn4.iconfinder.com/data/icons/gym-workout-1/128/8-512.png',\r\n    'https://cdn3.iconfinder.com/data/icons/man-using-phone-and-listening-to-earphone/254/earphone-man-009-512.png',\r\n    'https://cdn3.iconfinder.com/data/icons/sports-1-5/512/3-512.png',\r\n];\r\n\r\nexport { sports, sportIcons };\r\n","import React, { useState } from 'react';\r\nimport { axiosInstance as axios } from '../../config/axios-control';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isAuthSelector } from '../../store/reducers/auth';\r\nimport { firebaseApp } from '../../config/firebase';\r\nimport { sports } from '../../config/sports';\r\n\r\nconst sendNewUserToDatabase = ({ userId, email, userName, favouriteSport }) => {\r\n    axios.post('/users.json', {\r\n        id: userId,\r\n        email,\r\n        favourite_sport: favouriteSport,\r\n        name: userName,\r\n        is_boss: false,\r\n    }).then(() => {\r\n        toast.success('Użytkownik dodany');\r\n        return true;\r\n    }).catch(e => {\r\n        toast.error('Wystąpił błąd ', e);\r\n        return false;\r\n    })\r\n};\r\n\r\nconst register = ({ email, password, userName, favouriteSport }) => {\r\n    return firebaseApp.auth().createUserWithEmailAndPassword(email, password)\r\n        .then((user) => {\r\n            const userId = user.user.uid;\r\n            return sendNewUserToDatabase({ userId, email, userName, favouriteSport });\r\n        })\r\n        .catch(e => {\r\n            toast.error('Wystąpił błąd ', e);\r\n            return false;\r\n        });\r\n};\r\n\r\nconst Register = () => {\r\n    const isAuth = useSelector(isAuthSelector);\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [favouriteSport, setFavouriteSport] = useState('');\r\n    const [registered, setRegistered] = useState(false);\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        setRegistered(register({ email, password, userName, favouriteSport }));\r\n    };\r\n\r\n    if (registered) {\r\n        return <Redirect to={'/signin'} />;\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n\r\n    return (\r\n        <section className=\"section-form\">\r\n            <div className=\"SignIn form-main\">\r\n                <form onSubmit={submitHandler} autoComplete=\"off\">\r\n                    <h4 className=\"section__h4\">Zarejestruj się</h4>\r\n                    <div className=\"form-group email\">\r\n                        <input\r\n                            autoComplete=\"new-email\"\r\n                            onChange={event => setEmail(event.target.value)}\r\n                            className=\"form-control email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group userName\">\r\n                        <input\r\n                            autoComplete=\"new-username\"\r\n                            onChange={event => setUserName(event.target.value)}\r\n                            className=\"form-control userName\"\r\n                            name=\"userName\"\r\n                            id=\"userName\"\r\n                            placeholder=\"Nazwa użytkownika\"\r\n                            value={userName}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <select\r\n                            className=\"form-control\"\r\n                            required\r\n                            onChange={e => setFavouriteSport(e.target[e.target.selectedIndex].getAttribute('value'))}\r\n                        >\r\n                            <option>Wybierz ulubioną dyscyplinę</option>\r\n                            {sports.map(sport => (\r\n                                <option key={sport} value={sport}>\r\n                                    {sport}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group password\">\r\n                        <input\r\n                            autoComplete=\"new-password\"\r\n                            onChange={event => setPassword(event.target.value)}\r\n                            className=\"form-control password\"\r\n                            name=\"pass\"\r\n                            id=\"pass\"\r\n                            type=\"password\"\r\n                            placeholder=\"Hasło\"\r\n                            value={password}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-main\" type=\"submit\">\r\n                        <span>Zarejestruj się</span>\r\n                    </button>\r\n                    {/*{errorMessage(error)}*/}\r\n                </form>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { Register };\r\n","function loadPosition (cookies) {\r\n    if (cookies.get('hereChecked')) {\r\n        return {\r\n            success: true,\r\n            hereLat: cookies.get('hereLat'),\r\n            hereLng: cookies.get('hereLng'),\r\n        }\r\n    }\r\n\r\n    if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n            pos => {\r\n                const coordinates = pos.coords;\r\n                cookies.set('hereLat', coordinates.latitude, {\r\n                    path: '/',\r\n                    maxAge: 3600\r\n                });\r\n                cookies.set('hereLng', coordinates.longitude, {\r\n                    path: '/',\r\n                    maxAge: 3600\r\n                });\r\n                cookies.set('hereChecked', true, {\r\n                    path: '/',\r\n                    maxAge: 3600\r\n                });\r\n\r\n                return {\r\n                    success: true,\r\n                    hereLat: cookies.get('hereLat'),\r\n                    hereLng: cookies.get('hereLng'),\r\n                }\r\n            },\r\n            error => {\r\n                return {\r\n                    success: false,\r\n                }\r\n            },\r\n            {\r\n                maximumAge: 60,\r\n                timeout: 10000,\r\n                enableHighAccuracy: true,\r\n            }\r\n        )\r\n    } else {\r\n        return {\r\n            success: false,\r\n        }\r\n    }\r\n}\r\n\r\nexport { loadPosition };\r\n","const MapStyles = [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 36\r\n            },\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            },\r\n            {\r\n                \"weight\": 1.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.province\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ff0a00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 21\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 29\r\n            },\r\n            {\r\n                \"weight\": 0.2\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 18\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 16\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            },\r\n            {\r\n                \"lightness\": 19\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.station.airport\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": \"1.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#1976d2\"\r\n            },\r\n            {\r\n                \"lightness\": 17\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default MapStyles;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport MapStyles from './MapStyles';\r\n\r\nclass MapContainer extends Component {\r\n    componentDidMount() {\r\n        // call loadMap function to load the google map\r\n        this.loadMap();\r\n    }\r\n\r\n    loadMap = () => {\r\n        if (this.props && this.props.google) {\r\n            // checks to make sure that props have been passed\r\n            const { google } = this.props; // sets props equal to google\r\n            const maps = google.maps; // sets maps to google maps props\r\n            const directionsService = new maps.DirectionsService();\r\n            const distanceMatrix = new maps.DistanceMatrixService();\r\n            const directionsDisplay = new maps.DirectionsRenderer();\r\n            const mapRef = this.refs.map; // looks for HTML div ref 'map'. Returned in render below.\r\n            const node = ReactDOM.findDOMNode(mapRef); // finds the 'map' div in the React DOM, names it node\r\n            const centerObject = this.props.event || this.props.hereChecked ? {  lat: parseFloat(this.props.hereLat), lng: parseFloat(this.props.hereLng) } : {  lat: 54.344406, lng: 18.70492 };\r\n            const mapConfig = Object.assign(\r\n                {},\r\n                {\r\n                    center: centerObject, // sets center of google map to NYC.\r\n                    zoom: this.props.event ? 16 : 12, // sets zoom. Lower numbers are zoomed further out.\r\n                    mapTypeId: 'roadmap', // optional main map layer. Terrain, satellite, hybrid or roadmap--if unspecified, defaults to roadmap.\r\n                    styles: MapStyles\r\n                }\r\n            );\r\n\r\n            this.map = new maps.Map(node, mapConfig); // creates a new Google map on the specified node (ref='map') with the specified configuration set above.\r\n            directionsDisplay.setMap(this.map);\r\n            this.props.data && this.props.data.map(location => {\r\n                // iterate through locations saved in state\r\n                let lngNew = parseFloat(location.lng);\r\n                let latNew = parseFloat(location.lat);\r\n                const infowindow = new google.maps.InfoWindow({\r\n                    content: location.name\r\n                });\r\n                const marker = new google.maps.Marker({\r\n                    // creates a new Google maps Marker object.\r\n                    position: { lat: latNew, lng: lngNew }, // sets position of marker to specified location\r\n                    map: this.map // sets markers to appear on the map we just created on line 35\r\n                });\r\n                marker.addListener('click', function() {\r\n                    infowindow.open(this.map, marker);\r\n                });\r\n            });\r\n\r\n            let lngHere = parseFloat(this.props.hereLng);\r\n            let latHere = parseFloat(this.props.hereLat);\r\n\r\n            function calculateAndDisplay(directionsService, directionsDisplay, destLng, destLat) {\r\n                let lngNew = parseFloat(destLng);\r\n                let latNew = parseFloat(destLat);\r\n                directionsService.route(\r\n                    {\r\n                        origin: { lat: latHere, lng: lngHere },\r\n                        destination: { lat: latNew, lng: lngNew },\r\n                        travelMode: 'DRIVING'\r\n                    },\r\n                    function(response, status) {\r\n                        if (status === 'OK') {\r\n                            directionsDisplay.setDirections(response);\r\n                        } else {\r\n                            window.alert('Directions request failed due to ' + status);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n\r\n            const infowindow = new google.maps.InfoWindow({\r\n                content: !this.props.event ? 'Tu jesteś' : 'Wydarzenie'\r\n            });\r\n\r\n            const markerHere = new google.maps.Marker({\r\n                position: { lat: latHere, lng: lngHere }, // sets position of marker to specified location\r\n                map: this.map, // sets markers to appear on the map we just created on line 35\r\n            });\r\n\r\n            markerHere.addListener('click', function() {\r\n                infowindow.open(this.map, markerHere);\r\n            });\r\n\r\n            if (this.props.destSearch) {\r\n                calculateAndDisplay(directionsService, directionsDisplay, this.props.destLng, this.props.destLat);\r\n            } else if (this.props.destMatrix) {\r\n                if (this.props.dataFromNavigation.length > 0) {\r\n                    const navMatrix = this.props.dataFromNavigation;\r\n                    let navMatrixNew = navMatrix.map(item => ({\r\n                        lat: parseFloat(item.lat),\r\n                        lng: parseFloat(item.lng),\r\n                    }));\r\n\r\n                    calculateMatrix(distanceMatrix, navMatrixNew);\r\n                } else {\r\n                    const dataMatrix = this.props.data;\r\n                    let dataMatrixNew = dataMatrix.map(item => ({\r\n                        lat: parseFloat(item.lat),\r\n                        lng: parseFloat(item.lng),\r\n                    }));\r\n\r\n                    calculateMatrix(distanceMatrix, dataMatrixNew);\r\n                }\r\n\r\n                function calculateMatrix(distanceMatrix, source) {\r\n                    distanceMatrix.getDistanceMatrix({\r\n                            origins: [{ lat: latHere, lng: lngHere }],\r\n                             destinations: source,\r\n                            travelMode: 'DRIVING',\r\n                        }, function(response, status) {\r\n                            if (status !== 'OK') {\r\n                                console.error('Error on google API side');\r\n                            } else {\r\n                                let dataClosest = [];\r\n                                for (let key in response.rows[0].elements) {\r\n                                    dataClosest.push({\r\n                                        ...response.rows[0].elements[key]\r\n                                    });\r\n                                }\r\n\r\n                                let smallest;\r\n                                let indexArray;\r\n                                dataClosest.map((item, index) => {\r\n                                    if (smallest === undefined) {\r\n                                        smallest = item.distance.value;\r\n                                        indexArray = index;\r\n                                    } else {\r\n                                        if (smallest > item.distance.value) {\r\n                                            smallest = item.distance.value;\r\n                                            indexArray = index;\r\n                                        }\r\n                                    }\r\n                                });\r\n                                calculateAndDisplay(directionsService, directionsDisplay, source[indexArray].lng, source[indexArray].lat);\r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.destSearch || this.props.destMatrix) {\r\n            this.loadMap();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            width: '100%', // 90vw basically means take up 90% of the width screen. px also works.\r\n            height: '75vh' // 75vh similarly will take up roughly 75% of the height of the screen. px also works.\r\n        };\r\n\r\n        return (\r\n            <div ref=\"map\" style={style}>\r\n                Wczytywanie mapy...\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { MapContainer };\r\n","import React, { useState } from 'react';\r\nimport { MapContainer } from './MapContainer';\r\nimport { GoogleApiWrapper } from 'google-maps-react';\r\n\r\nconst MapBase = ({ google, ...props }) => {\r\n    return (\r\n        <div>\r\n            <MapContainer\r\n                {...props}\r\n                google={google}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Map = GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCNvB4QyXUU6I2gbxAI3DKCVlVESPEAAlA'\r\n})(MapBase);\r\n\r\nexport { Map };\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { createSelector } from 'reselect';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    opinions: [],\r\n    users: [],\r\n};\r\n\r\nconst eventsSelector = createSelector((state) => state.data.events, events => events);\r\nconst opinionsSelector = createSelector((state) => state.data.opinions, opinions => opinions);\r\nconst usersSelector = createSelector((state) => state.data.users, users => users);\r\n\r\nconst eventsForUser = (id) => createSelector(eventsSelector, events => events.filter(e => e.activePeople.find(u => u === id)));\r\nconst eventFromStoreSelector = (event) => createSelector(eventsSelector, events => events.find(e => e.name === event));\r\nconst userFromStoreSelector = (id) => createSelector(usersSelector, users => users.find(e => e.id === id));\r\nconst opinionsFromUserStoreSelector = (userId) => createSelector(opinionsSelector, opinions => opinions.find(e => e.author === userId));\r\n\r\nfunction dataReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_DATA:\r\n            return updateObject(state, {\r\n                events: action.payload.dataEvents,\r\n                opinions: action.payload.dataOpinions,\r\n                users: action.payload.dataUsers,\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport {\r\n    dataReducer,\r\n    eventsSelector,\r\n    eventsForUser,\r\n    eventFromStoreSelector,\r\n    opinionsSelector,\r\n    opinionsFromUserStoreSelector,\r\n    usersSelector,\r\n    userFromStoreSelector,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport './index.css';\r\nimport { loadPosition } from './utils/helpers';\r\nimport { Map } from './components/map/Map';\r\nimport { eventsSelector } from './store/reducers/data';\r\nimport { sports } from './config/sports';\r\n\r\nconst MainBase = ({ cookies }) => {\r\n    let child = undefined;\r\n    const dataEvents = useSelector(eventsSelector);\r\n    const loadPositionResponse = loadPosition(cookies);\r\n    const hereChecked = loadPositionResponse?.success;\r\n    const hereLat = loadPositionResponse?.hereLat;\r\n    const hereLng = loadPositionResponse?.hereLng;\r\n    const [xLng, setXLng] = useState('');\r\n    const [xLat, setXLat] = useState('');\r\n    const [select, setSelect] = useState('event');\r\n    const [sport, setSport] = useState('');\r\n    const [destSearch, setDestSearch] = useState(false);\r\n    const [destMatrix, setDestMatrix] = useState('');\r\n    const isButtonDisabled = () => Boolean(hereChecked) && xLng !== '' && xLat !== '';\r\n    const [dataToDisplay, setDataToDisplay] = useState(dataEvents);\r\n    useEffect(() => {\r\n        if (sport === '') {\r\n            setDataToDisplay(dataEvents);\r\n        } else {\r\n            setDataToDisplay(dataEvents.filter(e => e.sport === sport));\r\n        }\r\n    }, [dataEvents, sport]);\r\n\r\n    return (\r\n        <section className=\"section-welcome\">\r\n            <div className=\"panel navigate-column\">\r\n                <h4 className=\"section-welcome__h4\">Znajdź wydarzenie!</h4>\r\n                <div className=\"section-welcome__select-panel\">\r\n                    <h5>Dyscyplina</h5>\r\n                    <select\r\n                        style={{marginLeft: 0}}\r\n                        className=\"form-control\"\r\n                        required\r\n                        onChange={e => setSport(e.target[e.target.selectedIndex].getAttribute('value'))}\r\n                    >\r\n                        <option>Wybierz dyscyplinę</option>\r\n                        {sports.map(sport => (\r\n                            <option key={sport} value={sport}>\r\n                                {sport}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"section-welcome__select-panel\">\r\n                    <h5>Wydarzenie</h5>\r\n                    <select\r\n                        style={{marginLeft: 0}}\r\n                        className=\"form-control\"\r\n                        onChange={e => {\r\n                            setXLng(e.target[e.target.selectedIndex].getAttribute('lng'));\r\n                            setXLat(e.target[e.target.selectedIndex].getAttribute('lat'));\r\n                        }}\r\n                    >\r\n                        <option>Wybierz wydarzenie</option>\r\n                        {\r\n                            dataToDisplay && dataToDisplay.map((x) => {\r\n                                return (\r\n                                    <option key={`${x.key}_${x.lat}`} lat={x.lat} lng={x.lng}>\r\n                                        {x.name}\r\n                                    </option>\r\n                                );\r\n                            })}\r\n                        }\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"section-welcome__buttons-panel section-welcome__select-panel\">\r\n                    <button\r\n                        disabled={!isButtonDisabled()}\r\n                        onClick={() => setDestSearch(true)}\r\n                        className=\"btn btn-main\"\r\n                    >\r\n                        Nawiguj\r\n                    </button>\r\n                </div>\r\n\r\n                {\r\n                    !hereChecked &&\r\n                    <div className=\"section-welcome__buttons-panel section-welcome__select-panel\">\r\n                        <button\r\n                            onClick={() => loadPosition(cookies)}\r\n                            className=\"btn btn-main\"\r\n                        >\r\n                            Pobierz lokalziację\r\n                        </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"panel map-column\">\r\n                <div className=\"section-welcome-map__wrapper\">\r\n                    <Map\r\n                        ref={instance => {\r\n                            child = instance;\r\n                        }}\r\n                        hereChecked={hereChecked}\r\n                        destMatrix={destMatrix}\r\n                        dataFromNavigation={[]}\r\n                        destSearch={destSearch}\r\n                        destLat={xLat}\r\n                        destLng={xLng}\r\n                        hereLat={hereLat}\r\n                        hereLng={hereLng}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst Main = withCookies(MainBase);\r\n\r\nexport { Main };","import { sportIcons, sports } from '../../config/sports';\r\n\r\nfunction geocodeAddress(address, google) {\r\n    const maps = google.maps;\r\n    const geocoder = new maps.Geocoder();\r\n\r\n    return new Promise(function(resolve, reject) {\r\n        if (!address) {\r\n            reject(false);\r\n        }\r\n\r\n        geocoder.geocode(\r\n            { address },\r\n            function(results, status) {\r\n                if (status === 'OK') {\r\n                    const lat = results[0].geometry.location.lat();\r\n                    const lng = results[0].geometry.location.lng();\r\n                    resolve({\r\n                        success: true,\r\n                        lat,\r\n                        lng\r\n                    })\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nfunction mapSportToIcon(sport) {\r\n    const index = sports.findIndex(e => e === sport);\r\n    if (index < 0) {\r\n        return null;\r\n    }\r\n\r\n    return sportIcons[index];\r\n}\r\n\r\n\r\nexport { geocodeAddress, mapSportToIcon };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { usersSelector } from '../../store/reducers/data';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAdminSelector } from '../../store/reducers/auth';\r\nimport { mapSportToIcon } from '../events/helpers';\r\n\r\nconst Users = () => {\r\n    const isAdmin = useSelector(isAdminSelector);\r\n    const users = useSelector(usersSelector);\r\n    const removeUser = (id) => true;\r\n\r\n    return (\r\n        <section className=\"section-users\">\r\n            <h3 className=\"section-users__h3\">Lista użytkowników</h3>\r\n            {/*<div className=\"panel-user\">*/}\r\n                {/*<span className=\"panel-user-name\">Nazwa</span>*/}\r\n                {/*{isAdmin && (*/}\r\n                    {/*<span className=\"panel-user-options\">Opcje</span>*/}\r\n                {/*)}*/}\r\n            {/*</div>*/}\r\n            <div className=\"panel-user-wrapper\">\r\n                {users.map(x => {\r\n                    return (\r\n                        <div key={x.id} className=\"panel-user\">\r\n                            <span className=\"panel-user-icon\">\r\n                               <img src={mapSportToIcon(x.favourite_sport)} />\r\n                             </span>\r\n                            <Link className=\"panel-user-name\" to={'/users/' + x.id}>\r\n                                {x.name}\r\n                            </Link>\r\n                            {/*{user === 'admin' ? (*/}\r\n                                {/*<div*/}\r\n                                    {/*className=\"panel-close\"*/}\r\n                                    {/*onClick={() => removeUser(x.id)}*/}\r\n                                {/*>*/}\r\n                                    {/*<i className=\"fas fa-times\" />*/}\r\n                                {/*</div>*/}\r\n                            {/*) : null}*/}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { Users };\r\n","import React  from 'react';\r\nimport { axiosInstance as axios } from '../../config/axios-control';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { sports } from '../../config/sports';\r\nimport { toast } from 'react-toastify';\r\nimport { geocodeAddress } from './helpers';\r\nimport { fetchData } from '../../store/actions';\r\n\r\nclass EventAddModalBase extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: null,\r\n            desc: '',\r\n            limit: null,\r\n            lat: '',\r\n            lng: '',\r\n            name: '',\r\n            sport: '',\r\n            address: '',\r\n            time: null,\r\n            modal: false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    changeHandler = (e, property) => this.setState({ [property]: e.target.value });\r\n\r\n    handleGeocode = () => {\r\n        const { date, desc, limit, name, sport, address, time } = this.state;\r\n        if (date === null || desc === '' || limit === null || name === '' || sport === '' || this.props.userid === '' || address === '' || time === null) {\r\n            toast.error('Uzupełnij wszystkie pola');\r\n            return false;\r\n        }\r\n\r\n        geocodeAddress(this.state.address, this.props.google)\r\n            .then((response) => {\r\n                if (!response) toast.error('Wystąpił błąd');\r\n                const { lat, lng } = response;\r\n\r\n                axios.post('/events.json', {\r\n                    date, desc, lat, lng, limit, name, sport, address, time, userId: this.props.userId, activePeople: [this.props.userId], comments: [],\r\n                })\r\n                    .then(() => {\r\n                        this.toggle();\r\n                        this.setState({\r\n                            date: null,\r\n                            desc: '',\r\n                            limit: null,\r\n                            lat: '',\r\n                            lng: '',\r\n                            name: '',\r\n                            sport: '',\r\n                            address: '',\r\n                            time: null,\r\n                        });\r\n                        this.props.fetchData();\r\n                        return toast.success('Wydarzenie dodane');\r\n                    })\r\n                    .catch(e => toast.error('Wystąpił błąd: ', e))\r\n            });\r\n    };\r\n\r\n    toggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.isAuth ? (\r\n                    <Button className=\"btn-main add-pharmacy\" onClick={this.toggle}>\r\n                        Dodaj nowe wydarzenie\r\n                    </Button>\r\n                ) : null}\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    size={'lg'}\r\n                    centered={true}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>Nowe wydarzenie</ModalHeader>\r\n                    <ModalBody>\r\n                        <div\r\n                            style={{\r\n                                marginBottom: 20 + 'px'\r\n                            }}\r\n                            className=\"row justify-content-center\"\r\n                        >\r\n                            <div className=\"col-6\">\r\n                                <form className=\"form\" action=\"\" method=\"post\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Nazwa</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'name')}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"name\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Opis</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'desc')}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            name=\"description\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Data</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'date')}\r\n                                            type=\"date\"\r\n                                            name=\"date\"\r\n                                            min={new Date()}\r\n                                            className=\"form-control\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Godzina</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'time')}\r\n                                            type=\"time\"\r\n                                            name=\"time\"\r\n                                            className=\"form-control\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Limit osób</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'limit')}\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            max=\"99\"\r\n                                            className=\"form-control\"\r\n                                            id=\"limit\"\r\n                                            name=\"limit\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Dyscyplina</label>\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            required\r\n                                            onChange={e => this.setState({'sport': e.target[e.target.selectedIndex].getAttribute('value')})}\r\n                                        >\r\n                                            <option>Wybierz dyscyplinę</option>\r\n                                            {sports.map(sport => (\r\n                                                <option key={sport} value={sport}>\r\n                                                    {sport}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"\">Miejsce</label>\r\n                                        <input\r\n                                            onChange={e => this.changeHandler(e, 'address')}\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"address\"\r\n                                            name=\"address\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"section__btns\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => this.handleGeocode()}\r\n                                            className=\"btn btn-main\"\r\n                                        >\r\n                                            Dodaj\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.userId !== null,\r\n        userId: state.auth.userId,\r\n        user: state.auth.user\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchData: () => dispatch(fetchData()),\r\n});\r\n\r\nconst EventAddModal = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(EventAddModalBase);\r\n\r\nexport { EventAddModal };\r\n","import React from 'react';\r\nimport { GoogleApiWrapper } from 'google-maps-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { EventAddModal } from './EventAddModal';\r\nimport { eventsRef } from '../../config/firebase';\r\nimport { eventsSelector } from '../../store/reducers/data';\r\nimport { useSelector } from 'react-redux';\r\nimport { isAdminSelector, isAuthSelector } from '../../store/reducers/auth';\r\nimport { mapSportToIcon } from './helpers';\r\n\r\nconst EventsBase = ({ google }) => {\r\n    const events = useSelector(eventsSelector);\r\n    const isAuth = useSelector(isAuthSelector);\r\n    const isAdmin = useSelector(isAdminSelector);\r\n    const removePointAction = (id) => {\r\n        eventsRef.child(id).remove()\r\n            .then(() => {\r\n                toast.success(\"Item deleted\");\r\n            })\r\n            .catch(error => {\r\n                toast.error(\"Wystapil blad: \" + error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"section-pharmacies\">\r\n            <h3 className=\"section-opinions__h3\">Lista wydarzeń</h3>\r\n            <EventAddModal google={google}  />{' '}\r\n            {events.map((x, i) => {\r\n                return (\r\n                    <div className=\"row\" key={x.key}>\r\n                        <div className=\"col\">\r\n                            <div className=\"panel-link-wrapper\">\r\n                                <Link to={'/events/' + x.name}>\r\n                                    <div className=\"panel-link\">\r\n                                        <span className=\"panel-link-icon\">\r\n                                            <img src={mapSportToIcon(x.sport)} />\r\n                                        </span>\r\n                                        <span className=\"panel-link-name\">{x.name}</span>\r\n                                        <span className=\"panel-link-address\">{x.address}</span>\r\n                                    </div>\r\n                                </Link>\r\n                                {isAdmin && (\r\n                                    <div\r\n                                        className=\"panel-close\"\r\n                                        onClick={() => removePointAction(x.key)}\r\n                                    >\r\n                                        <i className=\"fas fa-times\" />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </section>\r\n    );\r\n};\r\n\r\nconst Events = GoogleApiWrapper({ apiKey: 'AIzaSyCNvB4QyXUU6I2gbxAI3DKCVlVESPEAAlA' })(EventsBase);\r\n\r\nexport { Events };\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => (\r\n    <section className=\"section-dashboard\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"panel-dashboard--large pharmacies\">\r\n                        <h3 className=\"panel-dashboard__h3\">\r\n                            Sportowcy <span>(30)</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"panel-dashboard--small users\">\r\n                                <h3 className=\"panel-dashboard__h3\">\r\n                                    Członkowie <span>(25)</span>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"panel-dashboard--small products\">\r\n                                <h3 className=\"panel-dashboard__h3\">\r\n                                    Wydarzenia <span>(312)</span>\r\n                                </h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport { Dashboard };\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Observed = () => {\r\n    const dataObserved = [];\r\n    const userId = '';\r\n    const isAuth = true;\r\n    const removePoint = (id) => true;\r\n\r\n    if (!this.props.isAuth) return <Redirect to={'/'} />;\r\n\r\n    return (\r\n        <section className=\"section-products\">\r\n            <div className=\"panel-product head\">\r\n                <span className=\"panel-product-photo\">Zdjęcie</span>\r\n                <span className=\"panel-product-name\">Nazwa</span>\r\n                <span className=\"panel-product-descr\">Opis</span>\r\n            </div>\r\n            {dataObserved.map(x => {\r\n                return (\r\n                    <div key={x.id} className=\"panel-product\">\r\n                        <img className=\"panel-product-photo\" src={x.photo_link} alt=\"\" />\r\n                        <span className=\"panel-product-name\">{x.name}</span>\r\n                        <span\r\n                            className=\"panel-product-descr\"\r\n                            dangerouslySetInnerHTML={{ __html: x.description }}\r\n                        />\r\n                        <div\r\n                            className=\"panel-close\"\r\n                            onClick={() => removePoint(x.id)}\r\n                        >\r\n                            <i className=\"fas fa-times\" />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </section>\r\n    )\r\n};\r\n\r\nexport { Observed };\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    eventsForUser,\r\n    eventsSelector,\r\n    opinionsFromUserStoreSelector,\r\n    userFromStoreSelector,\r\n    usersSelector\r\n} from '../../store/reducers/data';\r\nimport { Link } from 'react-router-dom';\r\nimport { mapSportToIcon } from '../events/helpers';\r\n\r\nconst User = (props) => {\r\n    const user = useSelector(userFromStoreSelector(props.match.params.user));\r\n\r\n    const userId = user?.id;\r\n    const events = useSelector(eventsForUser(userId));\r\n    if (!user) return <div></div>;\r\n    const isAuth = false;\r\n\r\n\r\n    return (\r\n        <section className=\"section-pharmacies\">\r\n            <div key={user.id} className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"community-profile\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                                <div className=\"community-profile-info\">\r\n                                    <div className=\"community-profile__photo\">\r\n                                        <img src={mapSportToIcon(user.favourite_sport)} />\r\n                                    </div>\r\n                                    <h3 className=\"community-profile__h3\">{user.name}</h3>\r\n                                    <h3 className=\"community-profile__h4\">Ulubiony sport: {user.favourite_sport}</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <div className=\"community-profile-content\">\r\n                                    <h3 className=\"community-profile__h3\">Wydarzenia w których bierze udział użytkownik</h3>\r\n                                    {events && events.map((x) => {\r\n                                            return (\r\n                                                <div\r\n                                                    key={x.key}\r\n                                                    className=\"community-profile-comment\"\r\n                                                >\r\n                                                    <Link to={'/events/' + x.name}>{x.name}</Link>{' '}\r\n                                                    <span className=\"mark\">{x.address}</span>\r\n                                                </div>\r\n                                            );\r\n                                    })}\r\n                                    {!events || !events.length && (\r\n                                        <div className=\"community-profile-comment\">\r\n                                            Brak Wydarzeń.\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { User };\r\n\r\n\r\n","import React, { useState , useEffect} from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { eventFromStoreSelector, usersSelector } from '../../store/reducers/data';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { eventsRef } from '../../config/firebase';\r\nimport { isAuthSelector, userIdSelector } from '../../store/reducers/auth';\r\nimport { fetchData } from '../../store/actions';\r\nimport { mapSportToIcon } from './helpers';\r\nimport { Map } from '../map/Map';\r\n\r\nconst Event = (props) => {\r\n    const dispatch = useDispatch();\r\n    const event = useSelector(eventFromStoreSelector(props.match.params.event));\r\n    const isAuth = useSelector(isAuthSelector);\r\n    const userId = useSelector(userIdSelector);\r\n    const users = useSelector(usersSelector);\r\n\r\n    const [comment, setComment] = useState('');\r\n\r\n    if (!event) return <div></div>;\r\n\r\n    const { activePeople, comments } = event;\r\n\r\n    const hasJoined = isAuth && activePeople.findIndex(e => e === userId) > -1;\r\n\r\n    const getUser = (x) => {\r\n        return users.find(u => u.id === x);\r\n    };\r\n\r\n    const sendComment = () => {\r\n        if (comment === '') return false;\r\n        let commentsToSpread = !comments ? [] : comments;\r\n\r\n        eventsRef.child(event.key).set({\r\n            ...event,\r\n            comments: [...commentsToSpread, {\r\n                desc: comment,\r\n                id: userId,\r\n                name: getUser(userId).id\r\n            }]\r\n        }).then(() => {\r\n            dispatch(fetchData());\r\n            toast.success('Komentarz dodany');\r\n        })\r\n    };\r\n\r\n    const joinEvent = () => {\r\n        if (hasJoined) return false;\r\n\r\n        eventsRef.child(event.key).set({\r\n            ...event,\r\n            activePeople: [...activePeople, userId]\r\n        }).then(() => {\r\n            dispatch(fetchData());\r\n            toast.success('Dołączyłeś do wydarzenia');\r\n        })\r\n    };\r\n\r\n    const leaveEvent = () => {\r\n        if (!hasJoined) return false;\r\n\r\n        eventsRef.child(event.key).set({\r\n            ...event,\r\n            activePeople: activePeople.filter(e => e !== userId)\r\n        }).then(() => {\r\n            dispatch(fetchData());\r\n            return toast.success('added');\r\n        })\r\n    };\r\n\r\n    return (\r\n        <section className=\"section-pharmacies\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"community-profile\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <div className=\"community-profile-info\">\r\n                                                <div className=\"community-profile__photo\">\r\n                                                    <img src={mapSportToIcon(event.sport)} />\r\n                                                </div>\r\n                                                {\r\n                                                    isAuth ?\r\n                                                    <Button className=\"btn-main marginHorizontal\" onClick={hasJoined ? () => leaveEvent() : () => joinEvent()}>\r\n                                                        { !hasJoined ? 'Dołącz do wydarzenia' : 'Opuść wydarzenie' }\r\n                                                    </Button> : <h5>Aby dołączyć, <Link to={'/signin'}>zaloguj się</Link></h5>\r\n                                                }\r\n\r\n                                                <h3 className=\"community-profile__h3\">{event.name}</h3>\r\n                                                <p className=\"community-profile-description\">\r\n                                                    <i\r\n                                                        className=\"fa fa-pencil\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    /> Opis: {event.desc}\r\n                                                </p>\r\n                                                <p className=\"community-profile-description\">\r\n                                                    <i\r\n                                                        className=\"fa fa-map-marker\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    />\r\n                                                    {event.address}\r\n                                                </p>\r\n                                                <p className=\"community-profile-description\">\r\n                                                    <i\r\n                                                        className=\"fa fa-calendar\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    /> Data wydarzenia: {event.date}\r\n                                                </p>\r\n                                                <p className=\"community-profile-description\">\r\n                                                    <i\r\n                                                        className=\"fa fa-clock\"\r\n                                                        aria-hidden=\"true\"\r\n                                                    /> Godzina: {event.time}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-5\">\r\n                                            <div className=\"community-profile-content\">\r\n                                                <h3 className=\"community-profile__h3\">Komentarze</h3>\r\n                                                {isAuth ? (\r\n                                                    <form className=\"community-profile__form\">\r\n                                                      <textarea\r\n                                                          onChange={event => setComment(event.target.value)}\r\n                                                          className=\"community-profile__textarea\"\r\n                                                          rows=\"4\"\r\n                                                          cols=\"50\"\r\n                                                          placeholder=\"Treść komentarza...\"\r\n                                                      />\r\n                                                        <button\r\n                                                            onClick={() => sendComment()}\r\n                                                            className=\"btn btn-main btn-publish\"\r\n                                                            type=\"button\"\r\n                                                        >\r\n                                                            Opublikuj\r\n                                                        </button>\r\n                                                    </form>\r\n                                                ) : null}\r\n                                                {comments && comments.length &&\r\n                                                    comments.map((x) => (\r\n                                                        <div\r\n                                                            key={x.desc}\r\n                                                            className=\"community-profile-comment\"\r\n                                                        >\r\n                                                            <p>{x.desc}</p>{' '}\r\n                                                            {<p>\r\n                                                                Przez:{' '}\r\n                                                                <Link to={`/users/${x.id}`}>\r\n                                                                    {x.name}\r\n                                                                </Link>\r\n                                                            </p>}\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                                {(!comments || !comments.length) && (\r\n                                                    <div className=\"community-profile-comment\">\r\n                                                        Brak komentarzy.\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-4\">\r\n                                            <div className=\"community-profile-products\">\r\n                                                <h3 className=\"community-profile__h3\">\r\n                                                    Lista biorących udział\r\n                                                </h3>\r\n\r\n                                                {activePeople && activePeople.length && <div\r\n                                                    className={'community-profile-product'}\r\n                                                >\r\n                                                    {\r\n                                                        activePeople.map((x) => {\r\n                                                            const user = getUser(x);\r\n                                                            return (\r\n                                                                <span key={user.id}\r\n                                                                      className=\"community-profile-product-name\">\r\n                                                                    <Link to={`/users/${user.id}`}>\r\n                                                                        {user.name}\r\n                                                                    </Link>\r\n                                                                </span>\r\n                                                            );\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </div>}\r\n\r\n                                                {(!activePeople || !activePeople.length) && (\r\n                                                    <div className=\"community-profile-product\">\r\n                                                        Nikt jeszcze nie bierze udziału.\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"panel map-column map-column-nofloat\">\r\n                                        <div className=\"section-welcome-map__wrapper\">\r\n                                            <Map\r\n                                                event={true}\r\n                                                dataFromNavigation={[]}\r\n                                                destSearch={false}\r\n                                                hereLat={event.lat}\r\n                                                hereLng={event.lng}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport { Event as EventPage };\r\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { Layout } from './components/layout/Layout';\nimport { Logout } from './components/utils/Logout';\nimport { SignIn } from './components/auth/SignIn';\nimport { Register } from './components/auth/Register';\nimport { Main } from './Main';\nimport { Users } from './components/users/Users';\nimport { Events } from './components/events/Events';\nimport { Opinions } from './components/opinions/Opinions';\nimport { Dashboard } from './components/dashboard/Dashboard';\nimport { Observed } from './components/observed/Observed';\nimport { User } from './components/users/User';\nimport { fetchData } from './store/actions/data';\nimport { EventPage } from './components/events/Event';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    render() {\n        return (\n            <Layout loaded={false}>\n                <ToastContainer />\n                <Switch>\n                    <Route path={'/'} exact component={Main} />\n                    <Route path={'/users'} exact component={Users} />\n                    <Route path={'/users/:user'} exact component={User} />\n                    <Route path={'/events'} exact component={Events} />\n                    <Route path={'/events/:event'} exact component={EventPage} />\n                    <Route path={'/signin'} exact component={SignIn} />\n                    <Route path={'/register'} exact component={Register} />\n                    <Route path={'/logout'} exact component={Logout} />\n                    <Route path={'/dashboard'} exact component={Dashboard} />\n                    <Route path={'/observed'} exact component={Observed} />\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    fetchData: () => dispatch(fetchData()),\n});\n\nexport default connect(undefined, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './assets/main.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { CookiesProvider } from 'react-cookie';\nimport { authReducer } from './store/reducers/auth';\nimport { dataReducer } from './store/reducers/data';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    data: dataReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n    <Provider store={store}>\n        <CookiesProvider>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </CookiesProvider>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}